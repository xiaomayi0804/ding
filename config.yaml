## 代理集合（获取机场订阅链接内的所有节点）
proxy-providers:
  🛫 我的机场 1:
    type: http
    ## 机场订阅链接，使用 Clash 链接
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/xiaomayi0804/ding/refs/heads/main/vip-jd"
    path: ./proxies/airport1.yaml
    interval: 86400
    ## 初步筛选需要的节点，可有效减轻路由器压力，支持正则表达式，不筛选可删除此配置项
    #filter: "(?i)港|hk|hongkong|hong kong|台|tw|taiwan|日本|jp|japan|新|sg|singapore|美|us|unitedstates|united states"
    ## 初步排除不需要的节点，支持正则表达式，若不排除可删除此配置项
    exclude-filter: "高倍|×10"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      ## 为节点名称添加固定前缀，如节点名称原为“香港节点”会变成“🛫 我的机场 1-香港节点”；推荐有多个机场时使用
      additional-prefix: "🛫 我的机场 1-"
      ## 为节点名称添加固定后缀，如节点名称原为“香港节点”会变成“香港节点-🛫 我的机场 1”；推荐有多个机场时使用
      additional-suffix: "-🛫 我的机场 1"

  🛫 我的机场 2:
    type: http
    url: "https://mxlsub.me/free"
    path: ./proxies/airport2.yaml
    interval: 43200
    #filter: "(?i)港|hk|hongkong|hong kong|台|tw|taiwan|日本|jp|japan|新|sg|singapore|美|us|unitedstates|united states"
    exclude-filter: "高倍|×10"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      ## 为节点名称添加固定前缀，如节点名称原为“香港节点”会变成“🛫 我的机场 2-香港节点”；推荐有多个机场时使用
      additional-prefix: "🛫 我的机场 2-"
      ## 为节点名称添加固定后缀，如节点名称原为“香港节点”会变成“香港节点-🛫 我的机场 2”；推荐有多个机场时使用
      additional-suffix: "-🛫 我的机场 2"

## 单个出站代理节点（以 vless 为例）
proxies:
  - name: "🟢 直连"
    type: direct
    udp: true
  - name: 🆓 免费节点
    port: 2532
    server: 128.204.223.99
    type: hysteria2
    udp: true
    sni: www.bing.com
    password: f9d4745c-8c72-497c-b878-bd623537e202
    skip-cert-verify: true

mixed-port: 7890
allow-lan: true
unified-delay: true
tcp-concurrent: true
external-controller: 0.0.0.0:9090
### 如果使用的是裸核，需要将下面的注释去掉，方便ui界面的使用
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'
find-process-mode: strict
global-client-fingerprint: chrome
profile:
  store-selected: true
  store-fake-ip: true
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"
tun:
  enable: true
  stack: system
  device: mihomo
  dns-hijack:
    - - tcp://any:53
  auto-route: true
  auto-detect-interface: true
  strict-route: true
  # 如果有使用zerotier或者headscale等，需要自己配置排除自己的网段
  # route-exclude-address: ["192.168.110.0/24"]
dns:
  enable: true
  ipv6: false
  prefer-h3: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  nameserver:
    # 网络环境文明的话推荐直接使用运营商的DNS服务器 或者 沿用上游的DNS服务器
    - system
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query
mode: rule
log-level: warning
ipv6: false
udp: true


use-hosts: true
hosts:
  cache.ott.ystenlive.itv.cmvideo.cn: pixman.io.ystenlive.dnsany.com
  cache.ott.bestlive.itv.cmvideo.cn: pixman.io.bestlive.dnsany.com
  cache.ott.wasulive.itv.cmvideo.cn: pixman.io.wasulive.dnsany.com
  cache.ott.fifalive.itv.cmvideo.cn: pixman.io.fifalive.dnsany.com
  cache.ott.hnbblive.itv.cmvideo.cn: pixman.io.hnbblive.dnsany.com



## 策略组
proxy-groups:
  ## 手动选择国家或地区节点；根据“国家或地区策略组”名称对 `proxies` 值进行增删改，须一一对应
  - {name: 🚀 节点选择, type: select, proxies: [🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 🌐 全部节点, 🆓 免费节点]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [DIRECT, 🚀 节点选择]}
  ## 选择`🎯 全球直连`为测试本地网络（运营商网络速度和 IPv6 支持情况），可选择其它节点用于测试机场节点速度和 IPv6 支持情况
  
  ## ----------------国家或地区策略组---------------------
  ## 自动选择节点，即按照 url 测试结果使用延迟最低的节点；测试后容差大于 50ms 才会切换到延迟低的那个节点；筛选出“香港”节点，支持正则表达式
  - {name: 🇭🇰 香港节点, type: url-test, tolerance: 50, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "(?i)港|hk|hongkong|hong kong"}
  ## 节点负载均衡，即将请求均匀分配到多个节点上，优点是更稳定，速度可能有提升；将相同顶级域名的请求分配给策略组内的同一个代理节点；推荐在节点复用比较多的情况下使用
  - {name: 🇹🇼 台湾节点, type: load-balance, strategy: consistent-hashing, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "(?i)台|tw|taiwan"}
  ## 可使用 `include-all-providers: true` 代替 `use: [🛫 我的机场 1, 🛫 我的机场 2, ...]`，意思为引入所有代理集合
  - {name: 🇯🇵 日本节点, type: url-test, tolerance: 50, include-all-providers: true, filter: "(?i)日本|jp|japan"}
  - {name: 🇸🇬 新加坡节点, type: url-test, tolerance: 50, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "(?i)新|sg|singapore"}
  - {name: 🇺🇸 美国节点, type: url-test, tolerance: 50, use: [🛫 我的机场 1, 🛫 我的机场 2], filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🌐 全部节点, type: select, include-all: true}
  
rules:
  - DOMAIN-SUFFIX,us.kg,🚀 节点选择
  - DOMAIN-SUFFIX,dnsany.com,DIRECT
  - DOMAIN-SUFFIX,cmvideo.cn,DIRECT
  - DOMAIN-SUFFIX,chinamobile.com,DIRECT
  - DOMAIN-SUFFIX,mobaibox.com,DIRECT
  - DOMAIN-SUFFIX,gitv.tv,DIRECT
  - DOMAIN-SUFFIX,cctv.cn,DIRECT
  - DOMAIN-SUFFIX,yangshipin.cn,DIRECT
  - DOMAIN-SUFFIX,gcable.cn,DIRECT
  - IP-CIDR,183.206.0.0/15,DIRECT,no-resolve
  - IP-CIDR,223.5.5.5/32,DIRECT,no-resolve
  - IP-CIDR,27.36.0.0/14,DIRECT,no-resolve
  - IP-CIDR,183.238.66.0/24,DIRECT,no-resolve

  # 自行测试当地是否能够直连，不能直连删掉下面这行
  #- DOMAIN,beesport.livednow.com,DIRECT

  # 台湾
  - DOMAIN-SUFFIX,cdn.hinet.net,🇹🇼 台湾节点
  - DOMAIN-SUFFIX,orz-7.com,🇹🇼 台湾节点
  - DOMAIN-SUFFIX,tvb.com,🇭🇰 香港节点
  - DOMAIN-KEYWORD,stream-link,🚀 节点选择
  - DOMAIN-SUFFIX,asuscomm.com,🚀 节点选择
  
  
  - DOMAIN-KEYWORD,teamviewer,DIRECT
  - DOMAIN-KEYWORD,doppiocdn,🚀 节点选择
  - DOMAIN-KEYWORD,bing,🚀 节点选择
  - DOMAIN-KEYWORD,ubtvfans,🚀 节点选择
  - DOMAIN-KEYWORD,workers.dev,🚀 节点选择
  - DOMAIN-KEYWORD,v2rayse,🚀 节点选择
  - DOMAIN-KEYWORD,jable,🚀 节点选择
  #- DOMAIN-KEYWORD,mushroom,DIRECT
  #- DOMAIN-KEYWORD,alonestreaming,DIRECT
  - IP-CIDR,91.108.0.0/16,🚀 节点选择,no-resolve
  - IP-CIDR,109.239.140.0/24,🚀 节点选择,no-resolve
  - IP-CIDR,149.154.175.0/24,🚀 节点选择,no-resolve
  #- PROCESS-NAME,onedrive.exe,DIRECT

  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT  
  - RULE-SET,tld-not-cn,🚀 节点选择,no-resolve
  - RULE-SET,gfw,🚀 节点选择,no-resolve
  - RULE-SET,proxy,🚀 节点选择,no-resolve
  - RULE-SET,direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,telegramcidr,🚀 节点选择,no-resolve
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🐟 漏网之鱼

rule-providers:
  reject:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt", path: ./ruleset/reject.yaml, interval: 86400}
  icloud:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt", path: ./ruleset/icloud.yaml, interval: 86400}
  apple:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt", path: ./ruleset/apple.yaml, interval: 86400}
  google:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt", path: ./ruleset/google.yaml, interval: 86400}
  proxy:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt", path: ./ruleset/proxy.yaml, interval: 86400}
  direct:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt", path: ./ruleset/direct.yaml, interval: 86400}
  private:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt", path: ./ruleset/private.yaml, interval: 86400}
  gfw:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt", path: ./ruleset/gfw.yaml, interval: 86400}
  tld-not-cn:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt", path: ./ruleset/tld-not-cn.yaml, interval: 86400}
  telegramcidr:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt", path: ./ruleset/telegramcidr.yaml, interval: 86400}
  cncidr:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt", path: ./ruleset/cncidr.yaml, interval: 86400}
  lancidr:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt", path: ./ruleset/lancidr.yaml, interval: 86400}
  applications:  {type: http, behavior: domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt", path: ./ruleset/applications.yaml, interval: 86400}
